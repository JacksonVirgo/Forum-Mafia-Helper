{"version":3,"sources":["img/logo.png","pages/Main.js","pages/404.js","scripts/reference.js","scripts/websockets.js","scripts/dateUtilities.js","components/ToolRoot.js","components/ReplacementForm.js","scripts/stringUtilities.js","components/centerModal.js","pages/replacement.js","components/testSocket.js","pages/Test.js","scripts/Vote.js","components/VoteCountForm.js","pages/VoteCount.js","index.js"],"names":["Main","auth","className","src","logo","alt","subtitle","href","NotFoundPage","serverUrl","createSocket","socket","socketIOClient","months","ToolRoot","state","result","progress","cache","obj","this","Object","assign","initSocketConnection","setupSocketListeners","closeSocketConnection","io","connect","disconnect","console","log","addSocketListener","onClientDisconnect","bind","onClientReconnect","id","func","on","React","Component","ReplacementForm","useState","setResult","setProgress","e","onReplacement","departing","author","lastPage","title","url","today","date","Date","currentDay","getDate","i","j","k","attachSuffixOf","currentMonth","getMonth","getCalendarDate","onSubmit","preventDefault","target","gameThread","value","departingPlayer","emit","htmlFor","name","type","readOnly","CenterModal","props","child","Replacement","TestSocket","Vote","voteData","category","pronoun","number","parseInt","post","votes","vote","last","valid","isAfter","settings","totalnames","alias","voteArray","lastVote","undefined","finalVote","length","originalVote","correction","findBestMatch","bestMatch","rating","correctionWeight","corrected","isCurrent","days","isDead","dead","deadUsr","deadRoot","rootUser","userRoot","user","VoteCount","onVoteCount","onProgress","data","addCache","cleaned","clean","formatted","format","setState","Math","round","currentPage","gameUrl","onFormSubmit","wagons","notVoting","majority","voteCount","getAlive","ceil","validVote","getNewest","isValid","authorIndex","indexOf","splice","push","totalVC","categoryVotes","wagonHead","players","aliveList","root","getRootAuthor","containsObject","votePost","cor","list","VoteCountForm","Doc","exact","path","component","Test","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dc1f7dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f16fac0d.png\";","import React from 'react';\nimport logo from '../img/logo.png';\nimport '../css/reset.css';\nimport '../css/app.css';\n\nfunction renderSubtitle(subtitle) {\n    let subtitleCmpt = (<h2>{subtitle}</h2>);\n    return subtitle ? subtitleCmpt : null;\n}\n\nexport default function Main(auth) {\n    return (\n        <div className='centerModal'>\n            <img src={logo} alt='Logo' />\n            <h1>Mafia Engine</h1>\n            {renderSubtitle(\"Version Beta 1.2\")}\n            <br />\n            <div className='mainmenu'>\n                <a className='menuoption' href='/rolecard'>Role Card</a>\n                <a className='menuoption' href='/replacement'>Replacement Form</a>\n                <a className='menuoption' href='/votecount'>Vote Counter</a>\n                <a className='menuoption' href='/info'>Information</a>\n            </div>\n        </div>)\n}\n","import React from 'react';\nimport logo from '../img/logo.png';\nimport '../css/reset.css';\nimport '../css/app.css';\n\nexport default function NotFoundPage() {\n    return (\n        <div className='centerModal'>\n            <img src={logo} alt='Logo' />\n            <h1>404</h1>\n            <h2>Page Not Found</h2>\n        </div>)\n}\n","export const serverUrl = \"http://mafiaengine.com\";","import socketIOClient from 'socket.io-client';\nimport { serverUrl } from \"./reference\";\n\nexport function createSocket(commands = []) {\n    const socket = socketIOClient(serverUrl);\n    return socket;\n}\n// Create a managable abstraction over this.","import { attachSuffixOf } from './stringUtilities';\nlet months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport function getCalendarDate() {\n    let date = new Date();\n    let currentDay = date.getDate();\n    currentDay = attachSuffixOf(currentDay);\n    let currentMonth = date.getMonth() + 1;\n    return `${currentDay} ${months[currentMonth - 1]}`;\n}\n","import React from 'react';\nimport io from 'socket.io-client';\n\nexport default class ToolRoot extends React.Component {\n    socket = null;\n    state = {\n        result: '',\n        progress: ''\n    }\n    cache = {};\n    addCache(obj) {\n        this.cache = Object.assign(obj);\n    }\n    setCache(obj) {\n        this.cache = obj;\n    }\n    clearCache() {\n        this.cache = {};\n    }\n    componentDidMount() {\n        this.initSocketConnection();\n        this.setupSocketListeners();\n    }\n    componentWillUnmount() {\n        this.closeSocketConnection();\n    }\n\n    initSocketConnection() {\n        this.socket = io.connect();\n    }\n    closeSocketConnection() {\n        this.socket.disconnect();\n    }\n    onClientDisconnect() {\n        console.log('Disconnected from Server');\n    }\n    onClientReconnect() {\n        console.log('Reconnected to Client');\n    }\n    setupSocketListeners() {\n        this.addSocketListener('disconnected', this.onClientDisconnect.bind(this));\n        this.addSocketListener('reconnect', this.onClientReconnect.bind(this));\n        this.addSocketListener('ping', console.log);\n    }\n    addSocketListener(id, func) {\n        this.socket.on(id, func);\n    }\n    render() {\n        return (<p>Blank Tool</p>)\n    }\n}","import React, { useState } from 'react'\nimport { createSocket } from '../scripts/websockets';\nimport { getCalendarDate } from '../scripts/dateUtilities';\n// eslint-disable-next-line\nimport ToolRoot from './ToolRoot';\n\n// class Replacement extends ToolRoot {\n\n// }\n\n\nfunction ReplacementForm() {\n    const [result, setResult] = useState('');\n    const [progress, setProgress] = useState('F');\n\n    const socket = createSocket();\n    socket.on('replacement', (e) => onReplacement(e));\n    let departing = null;\n\n    const onReplacement = (e) => {\n        console.log(e);\n        const { author, lastPage, title, url } = e;\n        let today = getCalendarDate();\n        let result = `${today}\\n[i][url=${url}]${title}[/url][/i]\\n[b]Moderator:[/b] [user]${author}[/user][tab]3[/tab][tab]3[/tab][b]Status:[/b] ${lastPage} pages [tab]3[/tab] [b]Replacing:[/b] [user]${departing}[/user]`;\n        setResult(result);\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const url = e.target.gameThread.value;\n        departing = e.target.departingPlayer.value;\n        socket.emit('replacement', { url });\n        setProgress('[pending]');\n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <label htmlFor='gameThread'>Link to Game Thread</label>\n            <input id='gameThread' name='gameThread' type='text' />\n            <br />\n            <label htmlFor='departingPlayer'>Departing Player</label>\n            <input id='departingPlayer' name='departingPlayer' type='text' />\n            <br />\n            <input type='submit' />\n            <br />\n            <h2>Result <span value={progress} /></h2>\n            <textarea name='result' value={result} readOnly />\n        </form>\n    )\n}\nexport default ReplacementForm\n\n\n// export class ReplacementForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             socket: createSocket([{ cmd: 'replacement', func: (socket, e) => this.onReplacement(socket, e) }]),\n//             result: 'To receive the formatted replacement post, please enter the necessary details in the form above.'\n//         }\n//     }\n//     onReplacement(socket, data) {\n//         const { author, lastPage, title, url, departingPlayer } = data;\n//         let today = getCalendarDate();\n//         let result = `${today}\\n[i][url=${url}]${title}[/url][/i]\\n[b]Moderator:[/b] [user]${author}[/user][tab]3[/tab][tab]3[/tab][b]Status:[/b] ${lastPage} pages [tab]3[/tab] [b]Replacing:[/b] [user]${departingPlayer}[/user]`;\n//         this.setState({ result });\n//     }\n//     submit(event) {\n//         event.preventDefault();\n//         const gameThread = event.target.gameThread.value;\n//         const departingPlayer = event.target.departingPlayer.value;\n//         const request = {\n//             cmd: 'replacement', data: {\n//                 gameThread: gameThread,\n//                 departingPlayer: departingPlayer\n//             }\n//         };\n//         this.state.socket.emit('replacement', request);\n//     }\n//     render() {\n//         return (\n//             <form onSubmit={this.submit}>\n//                 <label htmlFor='gameThread'>Link to Game Thread</label>\n//                 <input id='gameThread' name='gameThread' type='text' />\n//                 <br />\n//                 <label htmlFor='departingPlayer'>Departing Player</label>\n//                 <input id='departingPlayer' name='departingPlayer' type='text' />\n//                 <br />\n//                 <a>+1</a>\n//                 <br />\n//                 <input type='submit' value='Generate' />\n//                 <br />\n//                 <h2>Result</h2>\n//                 <textarea name='result' value={this.state.result} readOnly />\n//             </form>\n//         )\n//     }\n// }\n\n// export default ReplacementForm\n","export function attachSuffixOf(i) {\n    let j = i % 10, k = i % 100;\n    if (j === 1 && j !== 11) return i + \"st\";\n    else if (j === 2 && k !== 12) return i + \"nd\";\n    else if (j === 3 && k !== 13) return i + \"rd\";\n    else return i + \"th\";\n}\n","import React, { Component } from 'react'\n\nexport class CenterModal extends Component {\n    constructor(props) {\n        super(props);\n        this.title = props.title;\n        this.child = props.child;\n    }\n    render() {\n        return (\n            <div className='centerModal'>\n                <h1>{this.title}</h1>\n                <br />\n                {this.child}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../css/reset.css';\nimport '../css/app.css';\nimport ReplacementForm from '../components/ReplacementForm';\nimport { CenterModal } from '../components/centerModal';\nexport default function Replacement() {\n    return (\n        <CenterModal title='Replacement Form' child={(<ReplacementForm />)} />\n    )\n}\n","import React from 'react'\nimport { createSocket } from '../scripts/websockets';\n\nexport default function TestSocket() {\n    const socket = createSocket();\n    const submitForm = (e) => {\n        e.preventDefault();\n        socket.emit('ping', {});\n    }\n    return (<form onSubmit={submitForm}>\n        <input type='submit' value='Submit' />\n    </form>);\n}","import React from 'react';\nimport '../css/reset.css';\nimport '../css/app.css';\nimport TestSocket from '../components/testSocket';\nimport { CenterModal } from '../components/centerModal';\nexport default function Replacement() {\n    return (\n        <CenterModal title='Vote Count' child={(<TestSocket />)} />\n    )\n}\n","import { findBestMatch } from 'string-similarity';\n\nexport default class Vote {\n    constructor(voteData, category) {\n        this.category = category;\n        this.author = voteData.author;\n        this.pronoun = voteData.pronoun;\n        this.number = parseInt(voteData.post.number);\n        this.url = voteData.post.url;\n        this.votes = voteData.votes;\n        this.vote = {\n            last: null,\n            valid: null\n        }\n    }\n    isAfter(vote) {\n        return this.number > vote.number;\n    }\n    getNewest(vote) {\n        if (!vote) {\n            return this;\n        } else {\n            return this.isAfter ? this : vote;\n        }\n    }\n    clean(settings) {\n        const totalnames = settings.totalnames, alias = settings.alias, voteArray = this.votes[this.category];\n        let lastVote = undefined, finalVote = undefined;\n        for (let i = voteArray.length; i >= 0; i -= 1) {\n            const originalVote = voteArray[i];\n            if (lastVote === undefined) lastVote = originalVote;\n            if (finalVote === undefined) {\n                if (originalVote || originalVote === null) {\n                    if (originalVote === null) {\n                        finalVote = null;\n                    } else {\n                        let correction = findBestMatch(originalVote, totalnames).bestMatch;\n                        if (correction.rating >= settings?.correctionWeight || 0.7) {\n                            let corrected = alias[correction.target];\n                            if (corrected) {\n                                finalVote = corrected;\n                                if (lastVote === originalVote)\n                                    lastVote = finalVote;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.vote.last = lastVote;\n        this.vote.valid = finalVote;\n    }\n    isValid(settings) {\n        let isCurrent = this.number > parseInt(settings.days[settings.days.length - 1]);\n        let isDead = false;\n        for (let deadUsr of settings.dead) {\n            let deadRoot = this.rootUser(deadUsr, settings.totalnames);\n            let userRoot = this.rootUser(this.author, settings.totalnames);\n            if (deadRoot.target === userRoot.target) {\n                isDead = true;\n            }\n        }\n        return isCurrent && !isDead;\n    }\n    rootUser(user, totalnames) {\n        return findBestMatch(user, totalnames).bestMatch;\n    }\n}","import React from 'react'\nimport { findBestMatch } from 'string-similarity';\nimport ToolRoot from './ToolRoot';\nimport Vote from '../scripts/Vote';\n\nexport default class VoteCount extends ToolRoot {\n    cache = {};\n    setupSocketListeners() {\n        super.setupSocketListeners();\n        this.socket.on('votecount', this.onVoteCount.bind(this));\n        this.socket.on('progress', this.onProgress.bind(this));\n    }\n    onVoteCount(data) {\n        this.addCache(data);\n        let cleaned = this.clean();\n        let formatted = this.format(cleaned);\n        this.setState({ progress: '', result: formatted });\n    }\n    onProgress(data) {\n        let progress = Math.round(data.currentPage / data.lastPage * 100);\n        this.setState({ progress: `[${progress}%]` });\n    }\n    onFormSubmit(e) {\n        e.preventDefault();\n        let gameUrl = e.target.gameUrl.value || 'https://forum.mafiascum.net/viewtopic.php?f=2&t=85556'; // Second value is for testing purposes.\n        console.log(gameUrl);\n        this.socket.emit('votecount', { url: gameUrl });\n        this.setState({ progress: '[0%]' });\n        console.log('Form Submitted');\n    }\n    render() {\n        return (\n            <form onSubmit={this.onFormSubmit.bind(this)}>\n                <label htmlFor='gameUrl'>Link to Game Thread</label>\n                <input id='gameUrl' name='gameUrl' type='text' />\n                <br />\n                <input type='submit' value='Generate' />\n                <br />\n                <h2>Result <span>{this.state.progress}</span></h2>\n                <textarea name='result' value={this.state.result} readOnly />\n            </form>\n        );\n    }\n    clean() {\n        const voteData = { votes: {}, wagons: {}, notVoting: [], majority: null };\n        for (const category in this.cache.voteCount) {\n            if (!voteData.votes[category]) voteData.votes[category] = {};\n            if (!voteData.wagons[category]) voteData.wagons[category] = {};\n            voteData.notVoting = this.getAlive();\n            voteData.majority = Math.ceil(voteData.notVoting.length / 2);\n            for (const author in this.cache.voteCount[category]) {\n                let voteArray = this.cache.voteCount[category][author];\n                let lastVote = null;\n                let validVote = null;\n                for (let i = 0; i < voteArray.length; i++) {\n                    let vote = new Vote(voteArray[i], category);\n                    vote.clean(this.cache.settings);\n                    if (vote.vote.valid !== undefined) {\n                        if (vote.vote.valid) {\n                            validVote = vote.getNewest(validVote);\n                        } else {\n                            validVote = null;\n                        }\n                    }\n                    lastVote = vote.getNewest(lastVote);\n                }\n                let valid = validVote?.isValid(this.cache.settings);\n                if (valid) {\n                    let authorIndex = voteData.notVoting.indexOf(validVote.author);\n                    voteData.notVoting.splice(authorIndex, 1);\n                    voteData.votes[category][author] = {\n                        last: lastVote,\n                        valid: validVote\n                    };\n                    if (!voteData.wagons[category][validVote.vote.valid])\n                        voteData.wagons[category][validVote.vote.valid] = []\n                    voteData.wagons[category][validVote.vote.valid].push(validVote);\n                }\n            }\n        }\n        return voteData;\n    }\n    format(voteData) {\n        const { wagons, notVoting, majority } = voteData;\n        let totalVC = \"\";\n        for (const category in wagons) {\n            let categoryVotes = '[area]';\n            for (const wagonHead in wagons[category]) {\n                let voteArray = wagons[category][wagonHead];\n                let vote = `[b]${wagonHead}[/b] (${voteArray.length}) -> `;\n                for (let i = 0; i < voteArray.length; i++) {\n                    if (i > 0)\n                        vote += ', ';\n                    vote += `${voteArray[i].author}`;\n                }\n                categoryVotes += `${vote} [b][E-${majority - voteArray.length}][/b]\\n`;\n            }\n            if (notVoting.length > 0) {\n                categoryVotes += `\\n[b]Not Voting[/b] (${notVoting.length}) -> `;\n                for (let i = 0; i < notVoting.length; i++) {\n                    if (i > 0)\n                        categoryVotes += ', ';\n                    categoryVotes += `${notVoting[i]}`;\n                }\n            }\n            categoryVotes += '[/area]';\n            totalVC += categoryVotes;\n        }\n        return totalVC;\n    }\n    getAlive() {\n        const { players, dead } = this.cache.settings;\n        let aliveList = [];\n        for (let i = 0; i < players.length; i++) {\n            let root = this.getRootAuthor(players[i]);\n            if (!containsObject(root, aliveList) && !containsObject(root, dead)) {\n                aliveList.push(root);\n            }\n        }\n        return aliveList;\n    }\n    checkValid(votePost, category) {\n        let isCurrent = votePost.number > parseInt(this.cache.settings.days[this.cache.settings.days.length - 1]);\n        let isDead = false;\n        for (let deadUsr of this.cache.settings.dead) {\n            let deadRoot = this.rootUser(deadUsr);\n            let userRoot = this.rootUser(votePost.author);\n            if (deadRoot.target === userRoot.target) {\n                isDead = true;\n            }\n        }\n        return isCurrent && !isDead;\n    }\n    isValidVote(vote) {\n        let valid = false;\n        if (vote) {\n            let cor = this.rootUser(vote);\n            if (cor.rating >= this.cache.settings.correctionWeight || 0.7) {\n                let correctedVote = this.cache.settings.alias[cor.target];\n                if (correctedVote) {\n                    valid = true;\n                }\n            }\n        }\n        return valid;\n    }\n    rootUser(user) {\n        return findBestMatch(user, this.cache.settings.totalnames).bestMatch;\n    }\n    getRootAuthor(author) {\n        let bestMatch = findBestMatch(author, this.cache.settings.totalnames).bestMatch;\n        let root = this.cache.settings.alias[bestMatch.target];\n        return root || bestMatch.target;\n    }\n}\n\nfunction containsObject(obj, list) {\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] === obj)\n            return true;\n    }\n    return false;\n}","import React from 'react';\nimport '../css/reset.css';\nimport '../css/app.css';\nimport VoteCount from '../components/VoteCountForm';\nimport { CenterModal } from '../components/centerModal';\nexport default function VoteCountForm() {\n    return (\n        <CenterModal title='Vote Count' child={(<VoteCount />)} />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\n// Pages\nimport Main from './pages/Main.js';\nimport NotFoundPage from './pages/404.js';\nimport Replacement from './pages/replacement.js';\nimport Test from './pages/Test.js';\nimport VoteCountForm from './pages/VoteCount';\n\nclass Doc extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (<>\n            <Router>\n                <Switch>\n                    <Route exact path='/' component={Main} />\n                    <Route exact path='/replacement' component={Replacement} />\n                    <Route exact path='/votecount' component={VoteCountForm} />\n                    <Route exact path='/test' component={Test} />\n                    <Route path='/404' component={NotFoundPage} />\n                    <Redirect to='/404' />\n                </Switch>\n            </Router>\n        </>\n\n        )\n    }\n}\nReactDOM.render(<Doc />, document.getElementById('root'));"],"sourceRoot":""}